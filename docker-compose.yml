version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: railway-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-railway_reservation}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data:/docker-entrypoint-initdb.d
    networks:
      - railway-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-railway_reservation}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Railway API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: railway-api
    restart: unless-stopped
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-3000}
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: ${DB_USER:-postgres}
      DB_PASSWORD: ${DB_PASSWORD:-postgres}
      DB_NAME: ${DB_NAME:-railway_reservation}
    ports:
      - "${PORT:-3000}:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - railway-network
    volumes:
      - ./src:/app/src:ro
    command: sh -c "npm run setup && npm start"

volumes:
  postgres_data:
    driver: local

networks:
  railway-network:
    driver: bridge 